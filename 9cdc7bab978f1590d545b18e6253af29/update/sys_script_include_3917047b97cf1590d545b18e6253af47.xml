<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_376096_pxpval.ATFUtilClient</api_name>
        <caller_access/>
        <client_callable>true</client_callable>
        <description/>
        <name>ATFUtilClient</name>
        <script><![CDATA[var ATFUtilClient = Class.create();
ATFUtilClient.prototype = Object.extendsObject(global.AbstractAjaxProcessor, {
	
	initialize: function () {
		global.AbstractAjaxProcessor.prototype.initialize.apply(this, arguments);
	},
	
	getUIActionInfo: function () {
		try {
		var result = {
			status: 'error',
			message: ''
		};
		
		var uiActionSysID = this.getParameter('action_sys_id');
		if (uiActionSysID) {
			var uiActionGr = new GlideRecord('sys_ui_action');
			uiActionGr.addQuery('sys_id', uiActionSysID);
			uiActionGr.setLimit(1);
			uiActionGr.query();
			if (uiActionGr.next()) {
				result.info = {
					display_value: uiActionGr.getDisplayValue(),
					is_pxp_ui_action: !!uiActionGr.x_376096_pxp_enabled
				};
				result.status = 'success';
			} else {
				result.message = gs.getMessage('x_376096_pxp_record_unauthorized_or_invalid_record');
			}
		} else {
			result.message = gs.getMessage('x_376096_pxp_invalid_parameters');
		}

		return JSON.stringify(result);
		} catch (e) {
			return e.message;
		}
	},
	
	checkRecordExists: function () {
		var result = {
			status: 'error',
			message: ''
		};
		
		var table = this.getParameter('record_table');
		var sysID = this.getParameter('record_sys_id');
		if (table && sysID) {
			try {
				var extension = this._getExtensionPointForTable(table);
				result.record_exists = extension.recordExists(table, sysID);
				result.status = 'success';
			} catch (e) {
				if (gs.hasRole('admin')) {
					result.message += e;
					if (e.stack) {
						result.message += '\n' + e.stack;
					}
				}
				
				result.status = 'error';
			}
		} else {
			result.message = gs.getMessage('x_376096_pxp_invalid_parameters');
		}
		
		return JSON.stringify(result);
	},
	
	_getExtensionPointForTable: function (table) {
		var extensionPoints = new GlideScriptedExtensionPoint().getExtensions('ATFExtension');
		for (var i = 0, length = extensionPoints.length; i < length; i++) {
			var extensionPoint = extensionPoints[i];
			if (extensionPoint.handlesTable(table)) {
				return extensionPoint;
			}
		}

		throw new Error(gs.getMessage('x_376096_pxp_no_extension_point_available_for_table', [table]));
	},

    type: 'ATFUtilClient'
});]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2022-11-15 11:16:32</sys_created_on>
        <sys_id>3917047b97cf1590d545b18e6253af47</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ATFUtilClient</sys_name>
        <sys_package display_value="Portal Experience Validation" source="x_376096_pxpval">9cdc7bab978f1590d545b18e6253af29</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Portal Experience Validation">9cdc7bab978f1590d545b18e6253af29</sys_scope>
        <sys_update_name>sys_script_include_3917047b97cf1590d545b18e6253af47</sys_update_name>
        <sys_updated_by>system</sys_updated_by>
        <sys_updated_on>2024-07-28 19:28:21</sys_updated_on>
    </sys_script_include>
</record_update>
